/*
https://github.com/adammark/Markup.js
Modified by Matthew Holt to support iterating multidimensional arrays
*/
var Mark={includes:{},globals:{},delimiter:">",compact:false,_copy:function(e,t){t=t||[];for(var n in e){t[n]=e[n]}return t},_size:function(e){return e instanceof Array?e.length:e||0},_iter:function(e,t){this.idx=e;this.size=t;this.length=t;this.sign="#";this.toString=function(){return this.idx+this.sign.length-1}},_pipe:function(e,t){var n,r,i,s;if(n=t.shift()){r=n.split(this.delimiter);i=r.shift().trim();try{s=Mark.pipes[i].apply(null,[e].concat(r));e=this._pipe(s,t)}catch(o){}}return e},_eval:function(e,t,n){var r=this._pipe(e,t),i=r,s=-1,o,u;if(r instanceof Array){r="";o=i.length;while(++s<o){u={iter:new this._iter(s,o)};r+=n?Mark.up(n,i[s],u):i[s]}}else if(r instanceof Object){r=Mark.up(n,i)}return r},_test:function(e,t,n,r){var i=Mark.up(t,n,r).split(/\{\{\s*else\s*\}\}/);return(e===false?i[1]:i[0])||""},_bridge:function(e,t){var n="{{\\s*"+t+"([^/}]+\\w*)?}}|{{/"+t+"\\s*}}",r=new RegExp(n,"g"),i=e.match(r)||[],s,o,u=0,a=0,f=-1,l=0;for(o=0;o<i.length;o++){s=o;f=e.indexOf(i[s],f+1);if(i[s].indexOf("{{/")>-1){a++}else{u++}if(u===a){break}}u=e.indexOf(i[0]);a=u+i[0].length;l=f+i[s].length;return[e.substring(u,l),e.substring(a,f)]}};Mark.up=function(e,t,n){t=t||{};n=n||{};var r=/\{\{(.+?)\}\}/g,i=e.match(r)||[],s,o,u,a=[],f,l,c,h,p,d,v,m=0,g=0;if(n.pipes){this._copy(n.pipes,this.pipes)}if(n.includes){this._copy(n.includes,this.includes)}if(n.globals){this._copy(n.globals,this.globals)}if(n.delimiter){this.delimiter=n.delimiter}if(n.compact!==undefined){this.compact=n.compact}while(s=i[m++]){h=undefined;c="";f=s.indexOf("/}}")>-1;o=s.substr(2,s.length-(f?5:4));o=o.replace(/`(.+?)`/g,function(e,n){return Mark.up("{{"+n+"}}",t)});l=o.trim().indexOf("if ")===0;a=o.split("|");a.shift();o=o.replace(/^\s*if/,"").split("|").shift().trim();u=l?"if":o.split("|")[0];v=t[o];if(l&&!a.length){a=["notempty"]}if(!f&&e.indexOf("{{/"+u)>-1){h=this._bridge(e,u);s=h[0];c=h[1];m+=s.match(r).length-1}if(/^\{\{\s*else\s*\}\}$/.test(s)){continue}else if((p=this.globals[o])!==undefined){h=this._eval(p,a,c)}else if(d=this.includes[o]){if(d instanceof Function){d=d()}h=this._pipe(Mark.up(d,t),a)}else if(o.indexOf("#")>-1){n.iter.sign=o;h=this._pipe(n.iter,a)}else if(o==="."){h=this._pipe(t,a)}else if(o.indexOf(".")>-1){o=o.split(".");v=Mark.globals[o[0]];if(v){g=1}else{g=0;v=t}while(v&&g<o.length){v=v[o[g++]]}h=this._eval(v,a,c)}else if(l){h=this._pipe(v,a)}else if(v instanceof Array){h=this._eval(v,a,c)}else if(c){h=v?Mark.up(c,v):undefined}else if(t.hasOwnProperty(o)){h=this._pipe(v,a)}if(h instanceof Array)h=this._eval(h,a,c);if(l){h=this._test(h,c,t,n)}e=e.replace(s,h===undefined?"???":h)}return this.compact?e.replace(/>\s+</g,"><"):e};Mark.pipes={empty:function(e){return!e||(e+"").trim().length===0?e:false},notempty:function(e){return e&&(e+"").trim().length?e:false},blank:function(e,t){return!!e||e===0?e:t},more:function(e,t){return Mark._size(e)>t?e:false},less:function(e,t){return Mark._size(e)<t?e:false},ormore:function(e,t){return Mark._size(e)>=t?e:false},orless:function(e,t){return Mark._size(e)<=t?e:false},between:function(e,t,n){e=Mark._size(e);return e>=t&&e<=n?e:false},equals:function(e,t){return e==t?e:false},notequals:function(e,t){return e!=t?e:false},like:function(e,t){return(new RegExp(t,"i")).test(e)?e:false},notlike:function(e,t){return!Mark.pipes.like(e,t)?e:false},upcase:function(e){return String(e).toUpperCase()},downcase:function(e){return String(e).toLowerCase()},capcase:function(e){return e.replace(/\b\w/g,function(e){return e.toUpperCase()})},chop:function(e,t){return e.length>t?e.substr(0,t)+"...":e},tease:function(e,t){var n=e.split(/\s+/);return n.slice(0,t).join(" ")+(n.length>t?"...":"")},trim:function(e){return e.trim()},pack:function(e){return e.trim().replace(/\s{2,}/g," ")},round:function(e){return Math.round(+e)},clean:function(e){return String(e).replace(/<\/?[^>]+>/gi,"")},size:function(e){return e.length},length:function(e){return e.length},reverse:function(e){return Mark._copy(e).reverse()},join:function(e,t){return e.join(t)},limit:function(e,t,n){return e.slice(+n||0,+t+(+n||0))},split:function(e,t){return e.split(t||",")},choose:function(e,t,n){return!!e?t:n||""},toggle:function(e,t,n,r){return n.split(",")[t.match(/\w+/g).indexOf(e+"")]||r},sort:function(e,t){var n=function(e,n){return e[t]>n[t]?1:-1};return Mark._copy(e).sort(t?n:undefined)},fix:function(e,t){return(+e).toFixed(t)},mod:function(e,t){return+e%+t},divisible:function(e,t){return e&&+e%t===0?e:false},even:function(e){return e&&(+e&1)===0?e:false},odd:function(e){return e&&(+e&1)===1?e:false},number:function(e){return parseFloat(e.replace(/[^\-\d\.]/g,""))},url:function(e){return encodeURI(e)},bool:function(e){return!!e},falsy:function(e){return!e},first:function(e){return e.idx===0},last:function(e){return e.idx===e.size-1},call:function(e,t){return e[t].apply(e,[].slice.call(arguments,2))},set:function(e,t){Mark.globals[t]=e;return""},log:function(e){console.log(e);return e}}